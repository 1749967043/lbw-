#include "stdafx.h"
#include "CppUnitTest.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;

namespace UnitTest1
{		
	TEST_CLASS(UnitTest1)
	{
	public:
		
		TEST_METHOD(TestMethod1)
		{
			int  N,s, ans, m = 0, i=0;
			int n[2] = { -1,-2 };
			N = 2;
			ans = s = n[i]; //把ans初始化为序列中的的第一个数
			for (int i = 1; i <N ; i++) {
				if (s < m)
					m = s;
				s += n[i];
				if (s - m > ans)
					ans = s - m;
			}
			int real = -1;
			Assert::AreEqual(ans, real);
		}
		TEST_METHOD(TestMethod2)
		{
			int  N, s, ans, m = 0, i = 0;
			int n[2] = { 1,2 };
			N = 2;
			ans = s = n[i]; //把ans初始化为序列中的的第一个数
			for (int i = 1; i < N; i++) {
				if (s < m)
					m = s;
				s += n[i];
				if (s - m > ans)
					ans = s - m;
			}
			int real = 3;
			Assert::AreEqual(ans, real);
		}
		TEST_METHOD(TestMethod3)
		{
			int  N, s, ans, m = 0, i = 0;
			int n[3] = { 2,-1,1 };
			N = 2;
			ans = s = n[i]; //把ans初始化为序列中的的第一个数
			for (int i = 1; i < N; i++) {
				if (s < m)
					m = s;
				s += n[i];
				if (s - m > ans)
					ans = s - m;
			}
			int real = 2;
			Assert::AreEqual(ans, real);
		}
		TEST_METHOD(TestMethod4)
		{
			int  N, s, ans, m = 0, i = 0;
			int n[2] = { -1,3 };
			N = 2;
			ans = s = n[i]; //把ans初始化为序列中的的第一个数
			for (int i = 1; i < N; i++) {
				if (s < m)
					m = s;
				s += n[i];
				if (s - m > ans)
					ans = s - m;
			}
			int real = 3;
			Assert::AreEqual(ans, real);
		}

	};
}
